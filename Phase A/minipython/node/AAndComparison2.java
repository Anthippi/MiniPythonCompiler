/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AAndComparison2 extends PComparison2
{
    private PComparison2 _comparison2_;
    private TAnd _and_;
    private PComparison3 _comparison3_;

    public AAndComparison2()
    {
    }

    public AAndComparison2(
        PComparison2 _comparison2_,
        TAnd _and_,
        PComparison3 _comparison3_)
    {
        setComparison2(_comparison2_);

        setAnd(_and_);

        setComparison3(_comparison3_);

    }
    public Object clone()
    {
        return new AAndComparison2(
            (PComparison2) cloneNode(_comparison2_),
            (TAnd) cloneNode(_and_),
            (PComparison3) cloneNode(_comparison3_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAndComparison2(this);
    }

    public PComparison2 getComparison2()
    {
        return _comparison2_;
    }

    public void setComparison2(PComparison2 node)
    {
        if(_comparison2_ != null)
        {
            _comparison2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comparison2_ = node;
    }

    public TAnd getAnd()
    {
        return _and_;
    }

    public void setAnd(TAnd node)
    {
        if(_and_ != null)
        {
            _and_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _and_ = node;
    }

    public PComparison3 getComparison3()
    {
        return _comparison3_;
    }

    public void setComparison3(PComparison3 node)
    {
        if(_comparison3_ != null)
        {
            _comparison3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comparison3_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comparison2_)
            + toString(_and_)
            + toString(_comparison3_);
    }

    void removeChild(Node child)
    {
        if(_comparison2_ == child)
        {
            _comparison2_ = null;
            return;
        }

        if(_and_ == child)
        {
            _and_ = null;
            return;
        }

        if(_comparison3_ == child)
        {
            _comparison3_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_comparison2_ == oldChild)
        {
            setComparison2((PComparison2) newChild);
            return;
        }

        if(_and_ == oldChild)
        {
            setAnd((TAnd) newChild);
            return;
        }

        if(_comparison3_ == oldChild)
        {
            setComparison3((PComparison3) newChild);
            return;
        }

    }
}
